#!/usr/bin/env ruby

ENV["RACK_ENV"] ||= "production"

require "bundler"
Bundler.setup

require File.expand_path('../../lib/app.rb',  __FILE__)

c = QueueEntry.count
App.logger.info "[activitystreamer] starting up with #{c} " <<
  "entr#{c == 1 ? "y" : "ies"}"
STDOUT.flush
STDOUT.sync = true

while true do
  QueueEntry.where("next_try_at <= ?", Time.now).each do |qe|
    begin
      App.logger.info "[q#{qe.id}] processing #{qe.action} " <<
        "(try #{qe.tries + 1})"
      qe.process!

    rescue => e
      App.logger.error "[q#{qe.id}] failed processing: #{e.message}\n" <<
        e.backtrace.map{|l| "   #{l}" }.join("\n")

      if App.exception_recipients && App.exception_recipients.any?
        Pony.mail(
          :to => App.exception_recipients,
          :subject => "[#{App.name}] activitystreamer #{e.class} " <<
            "exception (#{e.message[0, 50]})",
          :body => "#{e.message}\n#{qe.inspect}\n#{e.backtrace.join("\n")}"
        )
      end

      qe.fail!
      sleep 5
    end
  end

  sleep 1
end
